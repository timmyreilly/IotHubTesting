---
# pipeline to deploy modules 

name: $(BuildDefinitionName).$(DayOfYear)$(Rev:.r)

pr: none
trigger: none

parameters:
  # Terraform Params
  - name: PREFIX
    displayName: PREFIX
    type: string
  - name: RESOURCE_GROUP_NAME
    displayName: RESOURCE_GROUP_NAME
    type: string  
  - name: RESOURCE_GROUP_LOCATION
    displayName: RESOURCE_GROUP_LOCATION
    type: string  
  - name: ADMIN_USERNAME
    displayName: ADMIN_USERNAME
    type: string
    default: "braveheart"
  - name: ADMIN_PASSWORD
    displayName: ADMIN_PASSWORD
    type: string
    default: "Password1234!"
    # ANSIBLE PARAMS
  - name: ANSIBLE_VERBOSITY_LEVEL
    displayName: Ansible verbosity level
    type: string
    default: "-vv"
    values:
      - "-v"
      - "-vv"
      - "-vvv"

variables:
  - group: core-key-vault

pool:
  vmImage: 'ubuntu-latest' 

jobs:
  - job: DeployAZDOAgent
    displayName:  Deploys and Configures an Ubuntu VM to be an AZDO Agent
    workspace:
      clean: all
    
    steps:
      - checkout: self

      - script: | 
          az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET -t $ARM_TENANT_ID
        env: 
          ARM_CLIENT_ID: $(ARM-CLIENT-ID)
          ARM_CLIENT_SECRET: $(ARM-CLIENT-SECRET)
          ARM_TENANT_ID: $(ARM-TENANT-ID)
      
      - script: | 
          chmod +x ./ubuntu_host_setup.sh
          ./ubuntu_host_setup.sh
        workingDirectory: $(System.DefaultWorkingDirectory)/setup
        displayName: "Install dependencies"
        env: 
          AGENT_ALLOW_RUNASROOT: 1

      

      - script: |
          ansible-playbook \
            $(Agent.BuildDirectory)/s/src/modules/ubuntu_azdo_agent/build_infrastructure.yml ${{ parameters.ANSIBLE_VERBOSITY_LEVEL }} 
        displayName: "configuring azdo agent"
        continueOnError: false
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
          ANSIBLE_STDOUT_CALLBACK: debug
          ARM_CLIENT_ID: $(ARM-CLIENT-ID)
          ARM_CLIENT_SECRET: $(ARM-CLIENT-SECRET)
          ARM_SUBSCRIPTION_ID: $(ARM-SUBSCRIPTION-ID)
          ARM_TENANT_ID: $(ARM-TENANT-ID)
          ARM_ACCESS_KEY: $(ARM-ACCESS-KEY)
          DEVOPS_AGENT_PAT : $(DEVOPS-AGENT-PAT)
          STORAGE_STATE_CONTAINER_NAME: $(STORAGE-STATE-CONTAINER-NAME)
          STORAGE_ACCOUNT_NAME: $(STORAGE-ACCOUNT-NAME)
          TF_VAR_prefix: ${{ parameters.PREFIX }}
          TF_VAR_resource_group_name: ${{ parameters.RESOURCE_GROUP_NAME }}
          TF_VAR_resource_group_location: ${{ parameters.RESOURCE_GROUP_LOCATION}}
          TF_VAR_admin_username: ${{ parameters.ADMIN_USERNAME }}
          TF_VAR_admin_password: ${{ parameters.ADMIN_PASSWORD }}
